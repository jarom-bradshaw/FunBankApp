name: FunBankApp Backend CI/CD

# Trigger on push to main and develop branches
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.5'

jobs:
  # Build and Test Job
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: ${{ env.GRADLE_VERSION }}
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build with Gradle
      run: ./gradlew build --no-daemon
      
    - name: Run tests
      run: ./gradlew test --no-daemon
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: build/reports/tests/
        retention-days: 30
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/libs/
        retention-days: 30

  # Deploy to Production (Heroku)
  deploy-production:
    name: Deploy to Production (Heroku)
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: ${{ env.GRADLE_VERSION }}
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build application
      run: ./gradlew build -x test --no-daemon
      
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "."
        buildpack: "heroku/java"
        
    - name: Set Heroku environment variables
      run: |
        heroku config:set DB_URL="${{ secrets.DB_URL }}" --app ${{ secrets.HEROKU_APP_NAME }}
        heroku config:set DB_USERNAME="${{ secrets.DB_USERNAME }}" --app ${{ secrets.HEROKU_APP_NAME }}
        heroku config:set DB_PASSWORD="${{ secrets.DB_PASSWORD }}" --app ${{ secrets.HEROKU_APP_NAME }}
        heroku config:set DB_DRIVER="com.mysql.cj.jdbc.Driver" --app ${{ secrets.HEROKU_APP_NAME }}
        
    - name: Run health checks
      run: |
        echo "Running health checks..."
        sleep 30
        curl -f https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/api/health
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "Production deployment to Heroku successful!"
        # Add notification logic here (Slack, email, etc.) 